# Stage 0 - compile and build the executable
FROM golang:alpine

# Set necessary environmet variables needed for our image
# ENV GO111MODULE=on \
#     CGO_ENABLED=0 \
#     GOOS=linux \
#     GOARCH=amd64

# Move to working directory /build
WORKDIR /build

# Copy and download dependency using go mod
COPY go.mod .
COPY go.sum .
RUN go mod download

# Copy the code into the container
COPY . .

# Build the application
RUN go build -o scopone-app ./src/cmd/scopone-mongo

# Stage 1 - create minimal image with just the executable
FROM alpine
COPY --from=0 /build/scopone-app .
COPY --from=0 /build/app.env .

ENV MONGO_CONNECTION="mongoConnectionUrl"

# Export necessary port
# EXPOSE 8080

# Command to run when starting the container
CMD ["/scopone-app"]

# FROM golang:alpine 
# RUN apk add git

# RUN mkdir /app
# ADD . /app/
# WORKDIR /app
# RUN go mod download
# RUN go build -o main ./...
# CMD ["/app/main"]

# RUN mkdir /scopone-server
# ADD . /scopone-server/
# WORKDIR /scopone-server
# RUN go mod download
# RUN go build -o scopone-server ./...
# CMD ["/scopone-server/server"]